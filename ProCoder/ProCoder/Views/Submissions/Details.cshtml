@model ProCoder.Models.Submission

@{
    ViewData["Title"] = "Chi tiết bài nộp #" + Model.SubmissionId;
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">

<style>
    body {
        font-family: 'Inter', sans-serif;
        background-color: #f7f9fc;
        color: #273240;
    }

    .page-header {
        background-color: #ffffff;
        padding: 1.5rem 2rem;
        border-radius: 0.5rem;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        margin-bottom: 1.5rem;
        border: 1px solid #e5e7eb;
    }

    .page-title {
        margin: 0;
        font-size: 1.5rem;
        font-weight: 700;
        color: #1e293b;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .subtitle {
        font-size: 0.875rem;
        color: #64748b;
        margin-top: 0.5rem;
    }

    .back-link {
        color: #3b82f6;
        text-decoration: none;
        margin-bottom: 1rem;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        font-weight: 500;
    }

    .back-link:hover {
        text-decoration: underline;
        color: #2563eb;
    }

    .submission-card {
        background-color: #ffffff;
        border-radius: 0.5rem;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        border: 1px solid #e5e7eb;
        margin-bottom: 1.5rem;
    }

    .card-header {
        padding: 1rem 1.5rem;
        background-color: #f8fafc;
        border-bottom: 1px solid #e5e7eb;
    }

    .header-title {
        font-size: 1rem;
        font-weight: 600;
        color: #0f172a;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .card-body {
        padding: 1.5rem;
    }

    .submission-info {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .info-item {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .info-label {
        font-size: 0.75rem;
        font-weight: 500;
        color: #64748b;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .info-value {
        font-size: 0.875rem;
        font-weight: 500;
        color: #0f172a;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .status-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.375rem;
        padding: 0.25rem 0.625rem;
        border-radius: 0.25rem;
        font-size: 0.75rem;
        font-weight: 500;
    }

    .status-accepted {
        background-color: #ecfdf5;
        color: #059669;
    }

    .status-wrong {
        background-color: #fef2f2;
        color: #ef4444;
    }

    .status-running {
        background-color: #eff6ff;
        color: #3b82f6;
    }

    .status-error {
        background-color: #fff7ed;
        color: #ea580c;
    }

    .status-timeout {
        background-color: #fdf4ff;
        color: #c026d3;
    }

    .code-box {
        margin-top: 1.5rem;
        background-color: #f8fafc;
        border-radius: 0.5rem;
        border: 1px solid #e5e7eb;
        overflow: hidden;
    }

    .code-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75rem 1rem;
        background-color: #f1f5f9;
        border-bottom: 1px solid #e5e7eb;
    }

    .code-title {
        font-size: 0.875rem;
        font-weight: 600;
        color: #475569;
        margin: 0;
    }

    .code-content {
        padding: 1rem;
        overflow-x: auto;
    }

    .code-content pre {
        margin: 0;
        padding: 0;
        font-family: Consolas, Monaco, 'Courier New', monospace;
        font-size: 0.875rem;
        color: #334155;
        white-space: pre-wrap;
    }

    .btn-view-tests {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
        font-weight: 500;
        color: #ffffff;
        background-color: #3b82f6;
        border: none;
        border-radius: 0.375rem;
        padding: 0.5rem 1rem;
        cursor: pointer;
        transition: background-color 0.2s;
        text-decoration: none;
    }

    .btn-view-tests:hover {
        background-color: #2563eb;
        text-decoration: none;
        color: #ffffff;
    }

    .test-results {
        margin-top: 1.5rem;
    }

    .test-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
    }

    .test-title {
        font-size: 1rem;
        font-weight: 600;
        color: #0f172a;
        margin: 0;
    }

    /* Test runs section */
    .test-cases-section {
        margin-top: 2rem;
    }
    
    .test-case {
        background-color: #ffffff;
        border-radius: 0.5rem;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
        border: 1px solid #e5e7eb;
        margin-bottom: 1rem;
        overflow: hidden;
    }
    
    .test-case-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75rem 1rem;
        background-color: #f8fafc;
        border-bottom: 1px solid #e5e7eb;
    }
    
    .test-case-title {
        font-size: 0.875rem;
        font-weight: 600;
        color: #0f172a;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .test-case-content {
        padding: 15px;
        border: 1px solid #dee2e6;
        border-radius: 5px;
        margin-bottom: 20px;
        background-color: #fff;
    }
    
    .result-label {
        font-weight: bold;
        margin-bottom: 5px;
        color: #495057;
        display: inline-block;
        margin-right: 10px;
    }

    .result-content {
        font-family: Consolas, Monaco, 'Courier New', monospace;
        background-color: #f8f9fa;
        padding: 10px;
        border-radius: 4px;
        overflow-x: auto;
        margin-top: 5px;
    }

    .ascii-table {
        font-family: Consolas, Monaco, 'Courier New', monospace;
        white-space: pre;
        font-size: 14px;
        line-height: 1.5;
    }
    
    .status-passed {
        color: #28a745;
        font-weight: bold;
    }
    
    .status-failed {
        color: #dc3545;
        font-weight: bold;
    }

    .status-indicator {
        display: inline-block;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        margin-right: 5px;
    }

    .status-indicator-passed {
        background-color: #28a745;
    }

    .status-indicator-failed {
        background-color: #dc3545;
    }
</style>

<div class="container my-4">
    <a asp-action="Index" class="back-link">
        <i class="bi bi-arrow-left"></i> Quay lại danh sách
    </a>

    <div class="page-header">
        <h1 class="page-title">
            <i class="bi bi-file-earmark-code"></i>
            Chi tiết bài nộp #@Model.SubmissionId
        </h1>
        <p class="subtitle">Xem thông tin chi tiết bài nộp và kết quả chấm bài</p>
    </div>

    <div class="submission-card">
        <div class="card-header">
            <h5 class="header-title">
                <i class="bi bi-info-circle"></i>
                Thông tin bài nộp
            </h5>
        </div>
        <div class="card-body">
            <div class="submission-info">
                <div class="info-item">
                    <div class="info-label">Bài tập</div>
                    <div class="info-value">
                        <a asp-controller="Problems" asp-action="Details" asp-route-id="@Model.ProblemId">
                            @Model.Problem.ProblemName
                        </a>
                    </div>
                </div>
                <div class="info-item">
                    <div class="info-label">Người nộp</div>
                    <div class="info-value">@Model.Coder.CoderName</div>
                </div>
                <div class="info-item">
                    <div class="info-label">Thời gian nộp</div>
                    <div class="info-value">@Model.SubmitTime.ToString("dd/MM/yyyy HH:mm:ss")</div>
                </div>
                <div class="info-item">
                    <div class="info-label">Kết quả</div>
                    <div class="info-value">
                        @if (Model.SubmissionStatus == "Accepted")
                        {
                            <span class="status-badge status-accepted">
                                <i class="bi bi-check-circle"></i> Đúng
                            </span>
                        }
                        else if (Model.SubmissionStatus == "Wrong Answer")
                        {
                            <span class="status-badge status-wrong">
                                <i class="bi bi-x-circle"></i> Sai
                            </span>
                        }
                        else if (Model.SubmissionStatus == "Runtime Error")
                        {
                            <span class="status-badge status-error">
                                <i class="bi bi-exclamation-triangle"></i> Lỗi
                            </span>
                        }
                        else if (Model.SubmissionStatus == "Time Limit Exceeded")
                        {
                            <span class="status-badge status-timeout">
                                <i class="bi bi-hourglass-split"></i> Quá thời gian
                            </span>
                        }
                        else if (Model.SubmissionStatus == "Pending")
                        {
                            <span class="status-badge status-running">
                                <i class="bi bi-arrow-repeat"></i> Đang chạy
                            </span>
                        }
                        else
                        {
                            @Model.SubmissionStatus
                        }
                    </div>
                </div>
                <div class="info-item">
                    <div class="info-label">Điểm</div>
                    <div class="info-value">@Model.Score / 100</div>
                </div>
                <div class="info-item">
                    <div class="info-label">Thời gian chạy</div>
                    <div class="info-value">
                        @if (Model.ExecutionTime.HasValue)
                        {
                            <span>@Model.ExecutionTime ms</span>
                        }
                        else
                        {
                            <span>-</span>
                        }
                    </div>
                </div>
            </div>

            <div class="code-box">
                <div class="code-header">
                    <h6 class="code-title">Mã SQL đã nộp</h6>
                </div>
                <div class="code-content">
                    <pre>@Model.SubmitCode</pre>
                </div>
            </div>
        </div>
    </div>

    <!-- Test Runs Section -->
    <div class="test-cases-section">
        <div class="page-header">
            <h2 class="page-title">
                <i class="bi bi-clipboard-check"></i> Kết quả chạy thử
            </h2>
            <p class="subtitle">Các bộ test case đã chạy để kiểm tra bài làm của bạn</p>
        </div>

        @if (Model.TestRuns != null && Model.TestRuns.Any())
        {
            foreach (var testRun in Model.TestRuns.OrderBy(tr => tr.TestCase.TestCaseId))
            {
                <div class="test-case">
                    <div class="test-case-header">
                        <h3 class="test-case-title">
                            <span class="status-indicator @(testRun.IsCorrect ? "status-indicator-passed" : "status-indicator-failed")"></span>
                            Test Case #@testRun.TestCase.OrderNumber - 
                            <span class="@(testRun.IsCorrect ? "status-passed" : "status-failed")">
                                @(testRun.IsCorrect ? "Passed" : "Failed")
                            </span>
                        </h3>
                        <div>
                            <span class="status-badge @(testRun.IsCorrect ? "status-accepted" : "status-wrong")">
                                @(testRun.IsCorrect ? "Đúng" : "Sai")
                            </span>
                            <span class="ml-2 text-muted">Thời gian: @(testRun.ExecutionTime ?? 0) ms</span>
                        </div>
                    </div>
                    <div class="test-case-content">
                        @if (!string.IsNullOrEmpty(testRun.ErrorMessage))
                        {
                            <div class="alert alert-danger mb-3">
                                <strong>Lỗi:</strong> @testRun.ErrorMessage
                            </div>
                        }

                        <div class="row mt-3">
                            <div class="col-md-12">
                                <div>
                                    <span class="result-label">Expected Output:</span>
                                </div>
                                <div class="result-content">
                                    @if (ViewBag.ExpectedOutputs != null && ViewBag.ExpectedOutputs.ContainsKey(testRun.TestRunId))
                                    {
                                        <pre class="ascii-table">@Html.Raw(ViewBag.ExpectedOutputs[testRun.TestRunId])</pre>
                                    }
                                    else
                                    {
                                        <pre>@testRun.TestCase.AnswerResultPath</pre>
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="row mt-3">
                            <div class="col-md-12">
                                <div>
                                    <span class="result-label">Actual Output:</span>
                                </div>
                                <div class="result-content">
                                    <pre class="ascii-table">@Html.Raw(testRun.ActualOutput)</pre>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="alert alert-info">
                <i class="bi bi-info-circle"></i> Không có dữ liệu chạy thử cho bài nộp này.
            </div>
        }
    </div>
</div> 