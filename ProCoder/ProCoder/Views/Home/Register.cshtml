@{
    ViewData["Title"] = "Đăng ký";
}

<div class="row justify-content-center min-vh-100 align-items-center">
    <div class="col-md-5">
        <div class="card shadow-lg border-0">
            <div class="card-body p-5">
                <div class="text-center mb-4">
                    <h2 class="fw-bold text-primary">@ViewData["Title"]</h2>
                    <p class="text-muted">Tạo tài khoản mới để bắt đầu!</p>
                </div>

                @if (!string.IsNullOrEmpty(ViewBag.Error))
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="fas fa-exclamation-circle me-2"></i>
                        @ViewBag.Error
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                <form method="post" id="registerForm" novalidate>
                    <div class="form-floating mb-3">
                        <input type="text" class="form-control" id="username" name="CoderName"
                               placeholder="Họ và tên" required>
                        <label for="username">Họ và tên</label>
                        <div class="invalid-feedback">
                            Vui lòng nhập họ và tên
                        </div>
                    </div>

                    <div class="form-floating mb-3">
                        <input type="email" class="form-control" id="email" name="CoderEmail"
                               placeholder="Email" required>
                        <label for="email">Email</label>
                        <div class="invalid-feedback">
                            Vui lòng nhập email hợp lệ
                        </div>
                    </div>

                    <div class="form-floating mb-3 password-field">
                        <input type="password" class="form-control" id="password" name="Password"
                               placeholder="Mật khẩu" required minlength="6">
                        <label for="password">Mật khẩu</label>
                        <button type="button" class="password-toggle" onclick="togglePassword('password')">
                            <i class="fas fa-eye"></i>
                        </button>
                        <div class="invalid-feedback">
                            Mật khẩu phải có ít nhất 6 ký tự
                        </div>
                    </div>

                    <div class="form-floating mb-3 password-field">
                        <input type="password" class="form-control" id="confirmPassword" name="confirmPassword"
                               placeholder="Xác nhận mật khẩu" required>
                        <label for="confirmPassword">Xác nhận mật khẩu</label>
                        <button type="button" class="password-toggle" onclick="togglePassword('confirmPassword')">
                            <i class="fas fa-eye"></i>
                        </button>
                        <div class="invalid-feedback">
                            Mật khẩu không khớp
                        </div>
                    </div>

                    <div class="mb-3">
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="Gender" id="male" value="true" checked>
                            <label class="form-check-label" for="male">Nam</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="Gender" id="female" value="false">
                            <label class="form-check-label" for="female">Nữ</label>
                        </div>
                    </div>

                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-primary btn-lg">
                            <i class="fas fa-user-plus me-2"></i>Đăng ký
                        </button>
                    </div>

                    <div class="text-center mt-4">
                        <p class="mb-0">
                            Đã có tài khoản?
                            <a href="/Home/Login" class="fw-bold text-decoration-none" style="color: #0d6efd;">
                                Đăng nhập
                            </a>
                        </p>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .form-floating > label {
        padding-left: 1rem;
    }

    .form-control:focus {
        border-color: #0d6efd;
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }

    .btn-primary {
        background-color: #0d6efd;
        border-color: #0d6efd;
        padding: 0.8rem;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        background-color: #0b5ed7;
        border-color: #0b5ed7;
        transform: translateY(-1px);
    }

    .text-primary {
        color: #0d6efd !important;
    }

    .card {
        border-radius: 1rem;
    }

    .form-check-input:checked {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }

    /* Ẩn icon validation (dấu chấm than) */
    .form-control:valid,
    .form-control:invalid {
        background-image: none !important;
    }

    /* Cho phép hiển thị icon con mắt của Chrome */
    input::-ms-reveal {
        display: none !important;
    }

    input[type="password"]::-webkit-contacts-auto-fill-button,
    input[type="password"]::-webkit-credentials-auto-fill-button {
        visibility: hidden !important;
        display: none !important;
        pointer-events: none;
        height: 0;
        width: 0;
        margin: 0;
    }

    .invalid-feedback {
        display: none;
        margin-top: 0.25rem;
        font-size: 0.875em;
        color: #dc3545;
    }

    .form-control.is-invalid {
        border-color: #dc3545;
    }

    .form-control.is-invalid:focus {
        border-color: #dc3545;
        box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.25);
    }

    .form-control.is-invalid ~ .invalid-feedback {
        display: block;
    }

    .password-field {
        position: relative;
    }

    .password-toggle {
        position: absolute;
        right: 12px;
        top: 50%;
        transform: translateY(-50%);
        cursor: pointer;
        color: #6c757d;
        z-index: 5;
        width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: transparent;
        border: none;
        padding: 0;
        outline: none;
    }

    .password-toggle:hover {
        color: #0d6efd;
    }

    .password-toggle:focus {
        outline: none;
    }

    /* Ẩn icon mặc định của trình duyệt */
    input::-ms-reveal,
    input::-ms-clear {
        display: none;
    }

    input[type="password"]::-webkit-contacts-auto-fill-button,
    input[type="password"]::-webkit-credentials-auto-fill-button {
        visibility: hidden;
        display: none !important;
        pointer-events: none;
        height: 0;
        width: 0;
        margin: 0;
    }

    .form-floating .form-control {
        padding-right: 45px;
    }
</style>

@section Scripts {
    <script>
        const form = document.getElementById('registerForm');
        const password = document.getElementById('password');
        const confirmPassword = document.getElementById('confirmPassword');

        function validatePassword() {
            if (password.value.length < 6) {
                password.classList.add('is-invalid');
                return false;
            } else {
                password.classList.remove('is-invalid');
            }

            if (password.value !== confirmPassword.value) {
                confirmPassword.classList.add('is-invalid');
                return false;
            } else {
                confirmPassword.classList.remove('is-invalid');
            }

            return true;
        }

        // Validate khi nhập
        password.addEventListener('input', validatePassword);
        confirmPassword.addEventListener('input', validatePassword);

        // Validate khi submit form
        form.addEventListener('submit', function(event) {
            if (!form.checkValidity() || !validatePassword()) {
                event.preventDefault();
                event.stopPropagation();
            }
            form.classList.add('was-validated');
        });

        // Validate email format
        const email = document.getElementById('email');
        email.addEventListener('input', function() {
            if (email.validity.typeMismatch) {
                email.classList.add('is-invalid');
            } else {
                email.classList.remove('is-invalid');
            }
        });

        function togglePassword(inputId) {
            const passwordInput = document.getElementById(inputId);
            const toggleButton = passwordInput.nextElementSibling.nextElementSibling;
            const icon = toggleButton.querySelector('i');

            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                passwordInput.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }
    </script>
} 