@using Microsoft.EntityFrameworkCore
@model ProCoder.Models.Problem
@{
    ViewData["Title"] = $"Bài tập - {Model.ProblemName}";
    var allProblems = await (new SqlExerciseScoringContext()).Problems
        .OrderBy(p => p.ProblemId)
        .ToListAsync();

    // Lấy tất cả InitData liên quan đến DatabaseSchema của vấn đề
    var allInitDatas = await (new SqlExerciseScoringContext()).InitData
        .Where(sd => sd.DatabaseSchemaId == Model.DatabaseSchemaId)
        .ToListAsync();
        
    // Kiểm tra xem bài tập đã được yêu thích chưa và đã giải chưa
    bool isFavourited = false;
    bool isSolved = false;
    
    var username = User.Identity?.Name;
    if (!string.IsNullOrEmpty(username))
    {
        var coder = await (new SqlExerciseScoringContext()).Coders
            .FirstOrDefaultAsync(c => c.CoderName == username);
            
        if (coder != null)
        {
            isFavourited = await (new SqlExerciseScoringContext()).Favourites
                .AnyAsync(f => f.CoderId == coder.CoderId && f.ProblemId == Model.ProblemId);
                
            // Kiểm tra xem bài tập đã được giải chưa
            isSolved = await (new SqlExerciseScoringContext()).Coders
                .Where(c => c.CoderId == coder.CoderId)
                .SelectMany(c => c.ProblemsNavigation)
                .AnyAsync(p => p.ProblemId == Model.ProblemId);
        }
    }
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/codemirror.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/styles/github.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=JetBrains+Mono:wght@400;500&display=swap" rel="stylesheet">

<style>
    body {
        font-family: 'Inter', sans-serif;
        background-color: #f7f9fc;
        color: #273240;
        margin: 0;
        padding: 0;
    }

    .top-navbar {
        background-color: #ffffff;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
        padding: 0.75rem 1.5rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
        border-bottom: 1px solid #e5e7eb;
        position: sticky;
        top: 0;
        z-index: 100;
    }

    .problem-list-btn {
        background-color: #f1f5f9;
        border: 1px solid #e2e8f0;
        color: #475569;
        font-weight: 500;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
        transition: all 0.2s;
    }

    .problem-list-btn:hover {
        background-color: #e2e8f0;
        color: #334155;
    }
    
    .favourite-btn {
        background-color: transparent;
        border: none;
        color: #64748b;
        font-size: 1.5rem;
        cursor: pointer;
        display: flex;
        align-items: center;
        transition: all 0.2s ease;
    }
    
    .favourite-btn:hover {
        transform: scale(1.1);
    }
    
    .favourite-btn.active {
        color: #fbbf24;
    }
    
    .favourite-btn i {
        margin-right: 0.5rem;
    }

    .main-container {
        max-width: 1600px;
        margin: 0 auto;
        padding: 1.5rem;
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1.5rem;
        height: calc(100vh - 4.5rem);
    }

    .problem-panel {
        background-color: #ffffff;
        border-radius: 0.5rem;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: column;
        overflow: hidden;
        border: 1px solid #e5e7eb;
    }

    .panel-header {
        display: flex;
        border-bottom: 1px solid #e5e7eb;
    }

    .tab-link {
        padding: 0.875rem 1.5rem;
        font-weight: 500;
        color: #64748b;
        text-decoration: none;
        font-size: 0.875rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        border-bottom: 2px solid transparent;
    }

    .tab-link.active {
        color: #2563eb;
        border-bottom: 2px solid #2563eb;
        font-weight: 600;
    }

    .tab-link:hover:not(.active) {
        color: #475569;
        background-color: #f8fafc;
    }

    .panel-content {
        padding: 1.5rem;
        overflow-y: auto;
        flex: 1;
    }

    .tab-content {
        display: none;
    }

    .tab-content.active {
        display: block;
    }

    .problem-header {
        border-bottom: 1px solid #e5e7eb;
        padding-bottom: 1.25rem;
        margin-bottom: 1.5rem;
    }

    .problem-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: #0f172a;
        margin-bottom: 0.75rem;
    }

    .db-tag {
        display: inline-flex;
        align-items: center;
        gap: 0.375rem;
        padding: 0.25rem 0.75rem;
        border-radius: 1rem;
        font-size: 0.75rem;
        font-weight: 500;
        background-color: #eff6ff;
        color: #3b82f6;
    }

    .section {
        margin-bottom: 1.5rem;
    }

    .section-title {
        font-size: 1rem;
        font-weight: 600;
        color: #0f172a;
        margin-bottom: 0.75rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .schema-description {
        background-color: #f8fafc;
        border-left: 3px solid #3b82f6;
        padding: 1rem;
        margin-bottom: 1rem;
        font-size: 0.875rem;
        color: #475569;
        line-height: 1.5;
        border-radius: 0.25rem;
    }

    .code-block {
        background-color: #f8fafc;
        border-radius: 0.375rem;
        border: 1px solid #e2e8f0;
        overflow: hidden;
        margin-bottom: 1rem;
    }

    .code-block pre {
        margin: 0;
        padding: 1rem;
    }

    .code-block code {
        font-family: 'JetBrains Mono', monospace;
        font-size: 0.875rem;
        line-height: 1.6;
    }

    .data-table {
        margin-bottom: 1rem;
    }

    .data-table-name {
        font-weight: 600;
        font-size: 0.875rem;
        margin-bottom: 0.375rem;
        color: #334155;
        display: flex;
        align-items: center;
        gap: 0.375rem;
    }

    .data-table-desc {
        color: #64748b;
        font-size: 0.75rem;
        margin-bottom: 0.5rem;
    }

    .problem-desc {
        font-size: 0.875rem;
        line-height: 1.6;
        color: #334155;
    }

    /* Editor panel styles */
    .editor-panel {
        background-color: #ffffff;
        border-radius: 0.5rem;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: column;
        overflow: hidden;
        border: 1px solid #e5e7eb;
    }

    .editor-header {
        padding: 0.75rem 1rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
        border-bottom: 1px solid #e5e7eb;
        background-color: #f8fafc;
    }

    .editor-title {
        font-size: 0.875rem;
        font-weight: 600;
        color: #0f172a;
    }

    .editor-actions {
        display: flex;
        gap: 0.75rem;
    }

    .btn {
        border: none;
        border-radius: 0.375rem;
        padding: 0.5rem 1rem;
        font-size: 0.875rem;
        font-weight: 500;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        gap: 0.375rem;
        transition: all 0.2s;
    }

    .btn-primary {
        background-color: #2563eb;
        color: #ffffff;
    }

    .btn-primary:hover {
        background-color: #1d4ed8;
    }

    .editor-container {
        flex: 1;
        overflow: hidden;
        position: relative;
        border-top: 1px solid #e5e7eb;
    }

    .CodeMirror {
        height: 100%;
        font-family: 'JetBrains Mono', monospace;
        font-size: 0.875rem;
        line-height: 1.6;
    }
    
    .CodeMirror-focused .CodeMirror-selected {
        background-color: rgba(37, 99, 235, 0.1);
    }
    
    .CodeMirror-line {
        padding-left: 0.5rem !important;
    }
    
    .CodeMirror-linenumber {
        color: #94a3b8;
        padding-right: 0.75rem;
    }
    
    .CodeMirror-gutters {
        border-right: 1px solid #e5e7eb;
        background-color: #f8fafc;
    }
    
    .CodeMirror-activeline-background {
        background-color: #f1f5f9;
    }
    
    .editor-status-bar {
        padding: 0.375rem 0.75rem;
        background-color: #f8fafc;
        border-top: 1px solid #e5e7eb;
        font-size: 0.75rem;
        color: #64748b;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .editor-actions {
        display: flex;
        gap: 0.75rem;
        align-items: center;
    }
    
    /* Other UI elements */
    .submissions-table {
        width: 100%;
        border-collapse: collapse;
        font-size: 0.875rem;
    }

    .submissions-table th {
        background-color: #f8fafc;
        padding: 0.75rem 1rem;
        text-align: left;
        font-weight: 600;
        color: #475569;
        border-bottom: 1px solid #e5e7eb;
    }

    .submissions-table td {
        padding: 0.75rem 1rem;
        border-bottom: 1px solid #f1f5f9;
    }

    .status-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.375rem;
        padding: 0.25rem 0.625rem;
        border-radius: 0.25rem;
        font-size: 0.75rem;
        font-weight: 500;
    }

    .status-accepted {
        background-color: #ecfdf5;
        color: #059669;
    }

    .status-wrong {
        background-color: #fef2f2;
        color: #ef4444;
    }

    .status-running {
        background-color: #eff6ff;
        color: #3b82f6;
    }

    .empty-state {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 3rem 0;
        color: #94a3b8;
    }

    .empty-state i {
        font-size: 2.5rem;
        margin-bottom: 1rem;
        opacity: 0.7;
    }

    .empty-state-text {
        font-size: 0.875rem;
        text-align: center;
    }

    .problem-dropdown {
        position: absolute;
        top: 100%;
        margin-top: 0.5rem;
        left: 0;
        background-color: #ffffff;
        border-radius: 0.5rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        border: 1px solid #e5e7eb;
        width: 300px;
        max-height: 400px;
        overflow-y: auto;
        display: none;
        z-index: 10;
    }

    .problem-item {
        padding: 0.75rem 1rem;
        border-bottom: 1px solid #f1f5f9;
        color: #475569;
        text-decoration: none;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
    }

    .problem-item.active {
        background-color: #eff6ff;
        color: #2563eb;
        font-weight: 500;
    }

    .problem-item:hover:not(.active) {
        background-color: #f8fafc;
    }

    .problem-number {
        color: #64748b;
        font-size: 0.75rem;
        min-width: 2rem;
    }

    @@media (max-width: 1024px) {
        .main-container {
            grid-template-columns: 1fr;
            height: auto;
        }
    }

    .submission-id-link {
        color: #2563eb;
        text-decoration: none;
        font-weight: 600;
        transition: text-decoration 0.2s;
    }
    .submission-id-link:hover {
        text-decoration: underline;
        cursor: pointer;
    }
</style>

<div class="top-navbar">
    @Html.AntiForgeryToken()
    <div style="position: relative;">
        <button id="problemListBtn" class="problem-list-btn">
            <i class="bi bi-list"></i>
            Danh sách bài tập
        </button>
        <div id="problemDropdown" class="problem-dropdown">
            @foreach (var problem in allProblems)
            {
                <a href="@Url.Action("Details", "Problems", new { id = problem.ProblemId })"
                   class="problem-item @(problem.ProblemId == Model.ProblemId ? "active" : "")">
                    <span class="problem-number">@problem.ProblemCode</span>
                    <span>@problem.ProblemName</span>
                </a>
            }
        </div>
    </div>
    
    <div class="d-flex align-items-center">
        @if (isSolved)
        {
            <span class="badge bg-success me-3">
                <i class="bi bi-check-circle-fill"></i> Đã giải
            </span>
        }
        <button id="favouriteBtn" class="favourite-btn @(isFavourited ? "active" : "")" data-problem-id="@Model.ProblemId">
            <i class="bi @(isFavourited ? "bi-star-fill" : "bi-star")"></i>
            <span class="d-none d-md-inline">@(isFavourited ? "Đã yêu thích" : "Yêu thích")</span>
        </button>
    </div>
</div>

<div class="main-container">
    <div class="problem-panel">
        <div class="panel-header">
            <a href="#" class="tab-link active" data-tab="description">
                <i class="bi bi-file-text"></i> Đề bài
            </a>
            <a href="#" class="tab-link" data-tab="submissions">
                <i class="bi bi-clock-history"></i> Lịch sử nộp
            </a>
        </div>
        <div class="panel-content">
            <div id="description-tab" class="tab-content active">
                <div class="problem-header">
                    <h1 class="problem-title">@Model.ProblemCode. @Model.ProblemName</h1>
                    <div>
                        <span class="db-tag">
                            <i class="bi bi-database"></i>
                            @Model.DatabaseSchema.SchemaName
                        </span>
                        
                        @if (ViewBag.ContestId != null)
                        {
                            <span class="badge bg-info ms-2">
                                <i class="bi bi-trophy"></i> Bài tập trong cuộc thi
                            </span>
                            
                            @if (ViewBag.SubmissionCount != null)
                            {
                                <span class="badge bg-secondary ms-2">
                                    <i class="bi bi-file-earmark-code"></i> Số lần nộp: @ViewBag.SubmissionCount
                                </span>
                            }
                            
                            @if (ViewBag.IsSolved == true)
                            {
                                <span class="badge bg-success ms-2">
                                    <i class="bi bi-check-circle"></i> Đã giải đúng - Điểm: @ViewBag.PointWon
                                </span>
                            }
                            else if (ViewBag.IsFirstAccess == true)
                            {
                                <span class="badge bg-warning ms-2">
                                    <i class="bi bi-exclamation-circle"></i> Lần đầu làm bài
                                </span>
                            }
                            else 
                            {
                                <span class="badge bg-danger ms-2">
                                    <i class="bi bi-x-circle"></i> Chưa giải đúng
                                </span>
                            }
                        }
                    </div>
                </div>

                <div class="section">
                    <h3 class="section-title">
                        <i class="bi bi-diagram-3"></i> Cấu trúc CSDL
                    </h3>
                    <div class="schema-description">
                        @Model.DatabaseSchema.Description
                    </div>

                    <div class="code-block">
                        <pre><code class="language-sql">@(ViewBag.SchemaContent ?? Model.DatabaseSchema.SchemaDefinitionPath)</code></pre>
                    </div>
                </div>

                <div class="section">
                    <h3 class="section-title">
                        <i class="bi bi-table"></i> Dữ liệu mẫu
                    </h3>
                    @if (allInitDatas != null && allInitDatas.Any())
                    {
                        foreach (var initData in allInitDatas)
                        {
                            <div class="data-table">
                                <div class="data-table-name">
                                    <i class="bi bi-grid"></i> @initData.DataName
                                </div>
                                @if (!string.IsNullOrEmpty(initData.Description))
                                {
                                    <div class="data-table-desc">@initData.Description</div>
                                }
                                <div class="code-block">
                                    <pre><code class="language-sql">@{
    var content = string.Empty;
    if (ViewBag.InitDataContents != null && ViewBag.InitDataContents.ContainsKey(initData.InitDataId))
    {
        content = ViewBag.InitDataContents[initData.InitDataId];
    }
    else
    {
        content = initData.DataContentPath;
    }
}@content</code></pre>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="empty-state">
                            <i class="bi bi-database-x"></i>
                            <p class="empty-state-text">Chưa có dữ liệu mẫu cho bài tập này.</p>
                        </div>
                    }
                </div>

                <div class="section">
                    <h3 class="section-title">
                        <i class="bi bi-check2-square"></i> Yêu cầu bài toán
                    </h3>
                    <div class="problem-desc">
                        @Html.Raw(Model.ProblemDescription)
                    </div>
                </div>
            </div>

            <div id="submissions-tab" class="tab-content">
                @if (Model.Submissions != null && Model.Submissions.Any())
                {
                    <table class="submissions-table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Trạng thái</th>
                                <th>Thời gian chạy</th>
                                <th>Ngày nộp</th>
                                <th>Điểm</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var submission in Model.Submissions.OrderByDescending(s => s.SubmitTime))
                            {
                                <tr>
                                    <td>
                                        <a href="@Url.Action("Details", "Submissions", new { id = submission.SubmissionId })" class="submission-id-link" title="Xem chi tiết bài nộp #@submission.SubmissionId">
                                            #@submission.SubmissionId
                                        </a>
                                    </td>
                                    <td>
                                        @if (submission.SubmissionStatus == "Accepted")
                                        {
                                            <span class="status-badge status-accepted">
                                                <i class="bi bi-check-circle"></i> Đúng
                                            </span>
                                        }
                                        else if (submission.SubmissionStatus == "Wrong Answer")
                                        {
                                            <span class="status-badge status-wrong">
                                                <i class="bi bi-x-circle"></i> Sai
                                            </span>
                                        }
                                        else if (submission.SubmissionStatus == "Runtime Error")
                                        {
                                            <span class="status-badge status-error">
                                                <i class="bi bi-exclamation-triangle"></i> Lỗi
                                            </span>
                                        }
                                        else if (submission.SubmissionStatus == "Time Limit Exceeded")
                                        {
                                            <span class="status-badge status-timeout">
                                                <i class="bi bi-hourglass-split"></i> Quá thời gian
                                            </span>
                                        }
                                        else if (submission.SubmissionStatus == "Pending")
                                        {
                                            <span class="status-badge status-running">
                                                <i class="bi bi-arrow-repeat"></i> Đang chạy
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="status-badge status-wrong">
                                                <i class="bi bi-x-circle"></i> @submission.SubmissionStatus
                                            </span>
                                        }
                                    </td>
                                    <td>
                                        @(submission.ExecutionTime.HasValue ? $"{submission.ExecutionTime} ms" : "-")
                                    </td>
                                    <td>@submission.SubmitTime.ToString("dd/MM/yyyy HH:mm:ss")</td>
                                    <td>@submission.Score</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <nav aria-label="Pagination" class="mt-3">
                        <ul class="pagination justify-content-center">
                            <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                                <a class="page-link" href="?page=@(ViewBag.CurrentPage - 1)" tabindex="-1">&laquo;</a>
                            </li>
                            @for (int i = 1; i <= (int)ViewBag.TotalPages; i++)
                            {
                                <li class="page-item @(i == (int)ViewBag.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="?page=@i">@i</a>
                                </li>
                            }
                            <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                                <a class="page-link" href="?page=@(ViewBag.CurrentPage + 1)">&raquo;</a>
                            </li>
                        </ul>
                    </nav>
                }
                else
                {
                    <div class="empty-state">
                        <i class="bi bi-journal-x"></i>
                        <p class="empty-state-text">Chưa có lần nộp bài nào.</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="editor-panel">
        <div class="editor-header">
            <div class="editor-title">Bạn nộp bài bằng SQL</div>
            <div class="editor-actions">
                <button class="btn btn-primary" id="submitBtn">
                    <i class="bi bi-send"></i> Nộp bài
                </button>
            </div>
        </div>
        <div class="editor-container">
            <textarea id="sqlEditor"></textarea>
        </div>
        <div class="editor-status-bar">
            <div class="editor-position">Vị trí: 1:0</div>
            <div class="editor-mode">SQL</div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/codemirror.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/mode/sql/sql.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/addon/edit/matchbrackets.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/addon/selection/active-line.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/addon/hint/show-hint.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/addon/hint/sql-hint.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/highlight.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/languages/sql.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/addon/hint/show-hint.min.css">

    <script>
        $(document).ready(function() {
            // Problem list dropdown
            $('#problemListBtn').click(function(e) {
                e.stopPropagation();
                $('#problemDropdown').toggle();
            });

            $(document).click(function(e) {
                if (!$(e.target).closest('#problemListBtn').length) {
                    $('#problemDropdown').hide();
                }
            });

            // Xử lý yêu thích bài tập
            $('#favouriteBtn').click(function(e) {
                e.preventDefault();
                const problemId = $(this).data('problem-id');
                const btn = $(this);
                
                $.ajax({
                    url: '@Url.Action("ToggleFavourite", "Favourites")',
                    type: 'POST',
                    data: { problemId: problemId },
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    dataType: 'json',
                    success: function(response) {
                        if (response && response.success === true) {
                            if (response.isFavourited) {
                                btn.addClass('active');
                                btn.find('i').removeClass('bi-star').addClass('bi-star-fill');
                                btn.find('span').text('Đã yêu thích');
                                
                                // Lưu trạng thái yêu thích vào localStorage
                                let favourites = JSON.parse(localStorage.getItem('favourites') || '[]');
                                if (!favourites.includes(problemId)) {
                                    favourites.push(problemId);
                                    localStorage.setItem('favourites', JSON.stringify(favourites));
                                }
                            } else {
                                btn.removeClass('active');
                                btn.find('i').removeClass('bi-star-fill').addClass('bi-star');
                                btn.find('span').text('Yêu thích');
                                
                                // Xóa khỏi localStorage
                                let favourites = JSON.parse(localStorage.getItem('favourites') || '[]');
                                favourites = favourites.filter(id => id != problemId);
                                localStorage.setItem('favourites', JSON.stringify(favourites));
                            }
                        }
                    }
                });
                
                return false;
            });

            // Tabs
            $('.tab-link').click(function(e) {
                e.preventDefault();

                $('.tab-link').removeClass('active');
                $(this).addClass('active');

                const tab = $(this).data('tab');
                $('.tab-content').removeClass('active');

                if (tab === 'description') {
                    $('#description-tab').addClass('active');
                } else if (tab === 'submissions') {
                    $('#submissions-tab').addClass('active');
                }
            });
            
            // Kiểm tra xem bài tập có trong danh sách yêu thích không và cập nhật UI
            function updateFavouriteUI() {
                const problemId = $('#favouriteBtn').data('problem-id');
                if (problemId) {
                    // Lấy danh sách yêu thích từ server
                    $.ajax({
                        url: '@Url.Action("GetFavourites", "Favourites")',
                        type: 'GET',
                        dataType: 'json',
                        success: function(response) {
                            if (response && response.success && response.favourites) {
                                if (response.favourites.includes(problemId)) {
                                    $('#favouriteBtn').addClass('active');
                                    $('#favouriteBtn').find('i').removeClass('bi-star').addClass('bi-star-fill');
                                    $('#favouriteBtn').find('span').text('Đã yêu thích');
                                }
                            }
                        }
                    });
                }
            }
            
            // Cập nhật UI khi tải trang
            updateFavouriteUI();

            // Initialize CodeMirror
            var editor = CodeMirror.fromTextArea(document.getElementById("sqlEditor"), {
                mode: "text/x-mysql",
                lineNumbers: true,
                matchBrackets: true,
                indentUnit: 4,
                tabSize: 4,
                indentWithTabs: true,
                lineWrapping: true,
                styleActiveLine: true,
                extraKeys: {
                    "Ctrl-Space": "autocomplete"
                }
            });

            // Update editor status bar with cursor position
            editor.on("cursorActivity", function() {
                var cursor = editor.getCursor();
                $('.editor-position').text(`Vị trí: ${cursor.line + 1}:${cursor.ch}`);
            });

            // Submit button handler
            $('#submitBtn').click(function() {
                const sqlQuery = editor.getValue().trim();

                if (!sqlQuery) {
                    console.log('Empty query');
                    return;
                }

                // Change button state
                const originalText = $(this).html();
                $(this).prop('disabled', true)
                       .html('<i class="bi bi-hourglass-split"></i> Đang xử lý...');

                // Submit query
                $.ajax({
                    url: '@Url.Action("Submit", "Problems")',
                    type: 'POST',
                    data: {
                        problemId: @Model.ProblemId,
                        query: sqlQuery
                        @if (ViewBag.ContestId != null)
                        {
                            @:, contestId: @ViewBag.ContestId
                        }
                    },
                    success: function(data) {
                        @if (ViewBag.ContestId != null)
                        {
                            @:// Nếu là bài tập trong cuộc thi, quay lại trang chi tiết cuộc thi
                            @:window.location.href = '@Url.Action("Details", "Contests", new { id = ViewBag.ContestId })';
                        }
                        else
                        {
                            @:// Luôn chuyển hướng đến trang Submissions bất kể kết quả
                            @:window.location.href = '@Url.Action("Index", "Submissions")';
                        }
                    },
                    error: function(err) {
                        // Trong trường hợp lỗi kết nối, cũng chuyển hướng
                        console.error('Connection error:', err);
                        @if (ViewBag.ContestId != null)
                        {
                            @:window.location.href = '@Url.Action("Details", "Contests", new { id = ViewBag.ContestId })';
                        }
                        else
                        {
                            @:window.location.href = '@Url.Action("Index", "Submissions")';
                        }
                    }
                });
            });

            // Initialize syntax highlighting
            document.querySelectorAll('pre code').forEach((el) => {
                hljs.highlightElement(el);
            });
        });
    </script>
}