@{
    ViewData["Title"] = "Chat";
}

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Chat Room</h5>
        </div>
        <div class="card-body">
            <div class="chat-container">
                <div class="chat-messages" id="messagesList">
                    @if (ViewBag.Messages != null && ViewBag.Messages.Count > 0)
                    {
                        @foreach (var msg in ViewBag.Messages)
                        {
                            <div class="message @(msg.User == User.Identity.Name ? "sent" : "received")">
                                <div class="sender">@msg.User</div>
                                <div class="content">@msg.Message</div>
                                <div class="time">@msg.SentAt.ToString("dd/MM/yyyy HH:mm")</div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center text-muted mt-3">
                            <p>Chưa có tin nhắn nào. Hãy bắt đầu cuộc trò chuyện!</p>
                        </div>
                    }
                </div>
                <div class="chat-input mt-3">
                    <div class="input-group">
                        <input type="text" class="form-control" id="messageInput" placeholder="Nhập tin nhắn...">
                        <button class="btn btn-primary" type="button" id="sendButton">Gửi</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .chat-container {
        max-width: 100%;
        margin: 0 auto;
    }

    .chat-messages {
        height: 400px;
        overflow-y: auto;
        padding: 15px;
        background: #f8f9fa;
        border-radius: 8px;
    }

    .message {
        margin-bottom: 15px;
        padding: 10px 15px;
        border-radius: 15px;
        max-width: 70%;
        word-wrap: break-word;
    }

    .message.sent {
        background: #007bff;
        color: white;
        margin-left: auto;
    }

    .message.received {
        background: #e9ecef;
        color: #212529;
    }

    .message .sender {
        font-size: 0.8em;
        margin-bottom: 5px;
        font-weight: bold;
    }

    .message .time {
        font-size: 0.7em;
        margin-top: 5px;
        opacity: 0.8;
    }

    .chat-input {
        margin-top: 15px;
    }
</style>

@section Scripts {
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
        var currentUser = "@User.Identity.Name";

        connection.on("ReceiveMessage", function (user, message, time) {
            var msg = document.createElement("div");
            msg.classList.add("message");
            msg.classList.add(user === currentUser ? "sent" : "received");
            
            var sender = document.createElement("div");
            sender.classList.add("sender");
            sender.textContent = user;
            
            var content = document.createElement("div");
            content.classList.add("content");
            content.textContent = message;
            
            var timeDiv = document.createElement("div");
            timeDiv.classList.add("time");
            timeDiv.textContent = time;
            
            msg.appendChild(sender);
            msg.appendChild(content);
            msg.appendChild(timeDiv);
            
            document.getElementById("messagesList").appendChild(msg);
            
            // Scroll to bottom
            var messagesList = document.getElementById("messagesList");
            messagesList.scrollTop = messagesList.scrollHeight;
        });

        connection.start().catch(function (err) {
            return console.error(err.toString());
        });

        document.getElementById("sendButton").addEventListener("click", function (event) {
            var message = document.getElementById("messageInput").value;
            if (message.trim() !== "") {
                connection.invoke("SendMessage", currentUser, message).catch(function (err) {
                    return console.error(err.toString());
                });
                document.getElementById("messageInput").value = "";
            }
            event.preventDefault();
        });

        document.getElementById("messageInput").addEventListener("keypress", function (event) {
            if (event.key === "Enter") {
                event.preventDefault();
                document.getElementById("sendButton").click();
            }
        });

        // Auto scroll to bottom when page loads
        window.onload = function() {
            var messagesList = document.getElementById("messagesList");
            messagesList.scrollTop = messagesList.scrollHeight;
        };
    </script>
} 